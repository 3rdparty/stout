"""Adds repositories/archives needed by stout."""

########################################################################
# DO NOT EDIT THIS FILE unless you are inside the
# https://github.com/3rdparty/stout repository. If you encounter it
# anywhere else it is because it has been copied there in order to
# simplify adding transitive dependencies. If you want a different
# version of stout follow the Bazel build instructions at
# https://github.com/3rdparty/stout.
########################################################################

load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
load("//3rdparty/bazel-rules-picojson:repos.bzl", picojson_repos = "repos")
load("//3rdparty/bazel-rules-rapidjson:repos.bzl", rapidjson_repos = "repos")

def repos(external = True, repo_mapping = {}):
    """Adds repositories/archives needed by stout

    Args:
          external: whether or not we're invoking this function as though
            though we're an external dependency
          repo_mapping: passed through to all other functions that expect/use
            repo_mapping, e.g., 'git_repository'
    """
    picojson_repos(
        repo_mapping = repo_mapping,
    )

    rapidjson_repos(
        repo_mapping = repo_mapping,
    )

    maybe(
        http_archive,
        name = "com_google_absl",
        urls = ["https://github.com/abseil/abseil-cpp/archive/refs/tags/20211102.0.tar.gz"],
        strip_prefix = "abseil-cpp-20211102.0",
        sha256 = "dcf71b9cba8dc0ca9940c4b316a0c796be8fab42b070bb6b7cab62b48f0e66c4",
        repo_mapping = repo_mapping,
    )

    maybe(
        git_repository,
        name = "com_github_nelhage_rules_boost",
        commit = "32164a62e2472077320f48f52b8077207cd0c9c8",
        remote = "https://github.com/nelhage/rules_boost",
        shallow_since = "1650381330 -0700",
    )

    maybe(
        http_archive,
        name = "com_github_gflags_gflags",
        url = "https://github.com/gflags/gflags/archive/v2.2.2.tar.gz",
        sha256 = "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
        strip_prefix = "gflags-2.2.2",
    )

    maybe(
        http_archive,
        name = "gtest",
        sha256 = "9dc9157a9a1551ec7a7e43daea9a694a0bb5fb8bec81235d8a1e6ef64c716dcb",
        strip_prefix = "googletest-release-1.10.0",
        url = "https://github.com/google/googletest/archive/release-1.10.0.tar.gz",
    )

    maybe(
        http_archive,
        name = "com_github_google_glog",
        url = "https://github.com/google/glog/archive/refs/tags/v0.5.0.tar.gz",
        sha256 = "eede71f28371bf39aa69b45de23b329d37214016e2055269b3b5e7cfd40b59f5",
        strip_prefix = "glog-0.5.0",
    )

    maybe(
        http_archive,
        name = "com_google_protobuf",
        strip_prefix = "protobuf-3.19.1",
        urls = [
            "https://mirror.bazel.build/github.com/protocolbuffers/protobuf/archive/v3.19.1.tar.gz",
            "https://github.com/protocolbuffers/protobuf/archive/v3.19.1.tar.gz",
        ],
        sha256 = "87407cd28e7a9c95d9f61a098a53cf031109d451a7763e7dd1253abf8b4df422",
        repo_mapping = repo_mapping,
    )

    # Copied and then modified to use the latest 'commit' and 'shallow_since'
    # rather than tracking the 'master' branch from:
    # https://github.com/fmtlib/fmt/tree/master/support/bazel
    maybe(
        git_repository,
        name = "com_github_fmtlib_fmt",
        commit = "81f1cc74a776581cdef8659d176049d3aeb743c6",
        shallow_since = "1658588611 -0700",
        remote = "https://github.com/fmtlib/fmt",
        patch_cmds = [
            "mv support/bazel/.bazelrc .bazelrc",
            "mv support/bazel/.bazelversion .bazelversion",
            "mv support/bazel/BUILD.bazel BUILD.bazel",
            "mv support/bazel/WORKSPACE.bazel WORKSPACE.bazel",
        ],
        # Windows-related patch commands are only needed in the case MSYS2 is not installed.
        # More details about the installation process of MSYS2 on Windows systems can be found here:
        # https://docs.bazel.build/versions/main/install-windows.html#installing-compilers-and-language-runtimes
        # Even if MSYS2 is installed the Windows related patch commands can still be used.
        patch_cmds_win = [
            "Move-Item -Path support/bazel/.bazelrc -Destination .bazelrc",
            "Move-Item -Path support/bazel/.bazelversion -Destination .bazelversion",
            "Move-Item -Path support/bazel/BUILD.bazel -Destination BUILD.bazel",
            "Move-Item -Path support/bazel/WORKSPACE.bazel -Destination WORKSPACE.bazel",
        ],
    )

    # Get the latest bazel rules for tl::expected.
    # https://github.com/TartanLlama/expected
    maybe(
        git_repository,
        name = "com_github_3rdparty_bazel_rules_tl_expected",
        remote = "https://github.com/3rdparty/bazel-rules-expected",
        commit = "c703632657bf4ec9177d9aea0447166d424b3b74",
        shallow_since = "1654243887 +0300",
        repo_mapping = repo_mapping,
    )

    if external:
        maybe(
            git_repository,
            name = "com_github_3rdparty_stout",
            commit = "67e6b9b08f340e223b741130815d97cf20296c08",
            remote = "https://github.com/3rdparty/stout",
            shallow_since = "1637367065 -0800",
        )
